{"version":3,"file":"static/js/779.44fbaf44.chunk.js","mappings":"uRAEaA,EAAcC,EAAAA,GAAAA,GAAH,gEAKXC,EAAkBD,EAAAA,GAAAA,GAAH,6CAIfE,EAAgBF,EAAAA,GAAAA,EAAH,sE,SC0C1B,EA9CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,IAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAG0BE,EAAAA,EAAAA,IAAeR,GAHzC,QAGUG,EAHV,QAIgBM,OAAS,IACnBL,EAAWD,GACXG,GAAa,IANnB,gDASII,QAAQC,IAAI,KAAMC,SAClBN,GAAa,GAVjB,0DADc,uBAAC,WAAD,wBAcdO,EACD,GAAE,CAACb,IAECG,EAIL,OACE,gCACsB,IAAnBA,EAAQM,OACP,4CAEA,SAACb,EAAD,UACGO,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACnB,EAAD,YACE,UAACC,EAAD,sBAAwBgB,MACxB,qCAAaC,OAFOC,EADX,MAShBZ,GAAaF,EAAQM,OAAS,IAAK,SAACS,EAAA,EAAD,MAGzC,C,+OCjDKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAA,gCACAA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAASF,GAE5B,IAAMG,EAAiB,mCAAG,6GAENF,EAAAA,EAAAA,IAAA,mBAA8B,CACnDG,OAAQ,CACNF,QAASF,KAJgB,cAEvBK,EAFuB,yBAOtBA,EAASC,KAAKC,SAPQ,uCAS7BhB,QAAQiB,MAAM,mCATe,kBAUtB,IAVsB,yDAAH,qDAcjBC,EAAc,mCAAG,WAAMC,GAAN,gGAEHT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNF,QAASF,EACTU,MAAAA,EACAC,KAAM,EACNC,eAAe,KAPO,cAEpBP,EAFoB,yBAUnBA,EAASC,KAAKC,SAVK,uCAY1BhB,QAAQiB,MAAM,mCAZY,kBAanB,IAbmB,yDAAH,sDAiBdK,EAAe,mCAAG,WAAMhC,GAAN,8GAEJoB,EAAAA,EAAAA,IAAA,iBAAoBpB,GAAW,CACpDuB,OAAQ,CACNF,QAASF,KAJc,uBAEnBM,EAFmB,EAEnBA,KAMNQ,EAMER,EANFQ,MACaC,EAKXT,EALFU,YACcC,EAIZX,EAJFY,aACAC,EAGEb,EAHFa,OACAC,EAEEd,EAFFc,SACcC,EACZf,EADFgB,aAbyB,kBAepB,CAAER,MAAAA,EAAOC,WAAAA,EAAYE,YAAAA,EAAaE,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,IAfhC,uCAiB3B9B,QAAQiB,MAAM,mCAjBa,kBAkBpB,IAlBoB,yDAAH,sDAsBrB,SAASe,EAAUR,GACxB,OAAIA,EAAkB,GAAN,OA1DG,kCA0DH,YAA0BA,GACnC,uDACR,CAEM,SAASS,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,CAEM,IAAMC,EAAO,mCAAG,WAAM9C,GAAN,kGAEIoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DuB,OAAQ,CACNF,QAASF,KAJM,uBAEXM,EAFW,EAEXA,KAFW,kBAQZA,EAAKsB,MARO,uCAUnBrC,QAAQiB,MAAM,mCAVK,kBAWZ,IAXY,yDAAH,sDAePnB,EAAc,mCAAG,WAAMR,GAAN,kGAEHoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DuB,OAAQ,CACNF,QAASF,KAJa,uBAElBM,EAFkB,EAElBA,KAFkB,kBAQnBA,EAAKC,SARc,uCAU1BhB,QAAQiB,MAAM,mCAVY,kBAWnB,IAXmB,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsWrap = styled.ul`\n  width: 1100px;\n  margin: 10px auto;\n`;\n\nexport const ReviewsListItem = styled.li`\n  margin-top: 20px;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  font-weight: 500;\n  padding-bottom: 10px;\n`;\n","import { getMovieReview } from '../../services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { ReviewsWrap, ReviewsListItem, ReviewsAuthor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        setIsLoading(true);\n        const reviews = await getMovieReview(movieId);\n        if (reviews.length > 0) {\n          setReviews(reviews);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.log(error.message);\n        setIsLoading(false);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        \"Unfortunately we didn't find anything...\"\n      ) : (\n        <ReviewsWrap>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewsListItem key={id}>\n              <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n              <p>Content: {content}</p>\n            </ReviewsListItem>\n          ))}\n        </ReviewsWrap>\n      )}\n\n      {isLoading && reviews.length > 0 && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'fa9433e46ed4abfaeb75bcf31f473feb';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport function getPoster(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://via.placeholder.com/250x375/c4a9c4/969696.jpg';\n}\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.cast;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n"],"names":["ReviewsWrap","styled","ReviewsListItem","ReviewsAuthor","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMovieReview","length","console","log","message","getReviews","map","author","content","id","Loader","API_KEY","axios","api_key","getTrendingMovies","params","response","data","results","error","getMovieByName","query","page","include_adult","getMovieDetails","title","posterPath","poster_path","releaseDate","release_date","genres","overview","voteAverage","vote_average","getPoster","getDate","date","split","getCast","cast"],"sourceRoot":""}