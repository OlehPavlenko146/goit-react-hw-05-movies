{"version":3,"file":"static/js/304.3bd7fbba.chunk.js","mappings":"6QAEaA,EAAYC,EAAAA,GAAAA,GAAH,0CAGTC,EAAWD,EAAAA,GAAAA,GAAH,wEAIRE,EAAWF,EAAAA,GAAAA,GAAH,+E,SCmCrB,EAvCa,WACX,OAA4CG,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEiCC,EAAAA,EAAAA,MAFjC,QAEUH,EAFV,QAGuBI,OAAS,GAC1BH,EACED,EAAeK,KAAI,SAAAC,GAAa,MAAK,CACnCC,GAAID,EAAcC,GAClBC,MAAOF,EAAcG,eACrBC,KAAMJ,EAAcI,KAHU,KALxC,gDAaIC,QAAQC,IAAI,KAAMC,SAbtB,0DADc,uBAAC,WAAD,wBAiBdC,EACD,GAAE,KAGD,6BACE,SAACnB,EAAD,+BACA,SAACE,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAgBK,KAAI,SAAAC,GAAa,OAChC,SAACR,EAAD,WACE,SAAC,KAAD,CAAMiB,GAAE,kBAAaT,EAAcC,IAAnC,SACGD,EAAcE,OAASF,EAAcI,QAF3BJ,EAAcC,GADG,QAUzC,C,+OCxCKS,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAA,gCACAA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAASF,GAE5B,IAAMb,EAAiB,mCAAG,6GAENc,EAAAA,EAAAA,IAAA,mBAA8B,CACnDE,OAAQ,CACND,QAASF,KAJgB,cAEvBI,EAFuB,yBAOtBA,EAASC,KAAKC,SAPQ,uCAS7BX,QAAQY,MAAM,mCATe,kBAUtB,IAVsB,yDAAH,qDAcjBC,EAAc,mCAAG,WAAMC,GAAN,gGAEHR,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACND,QAASF,EACTS,MAAAA,EACAC,KAAM,EACNC,eAAe,KAPO,cAEpBP,EAFoB,yBAUnBA,EAASC,KAAKC,SAVK,uCAY1BX,QAAQY,MAAM,mCAZY,kBAanB,IAbmB,yDAAH,sDAiBdK,EAAe,mCAAG,WAAMC,GAAN,8GAEJZ,EAAAA,EAAAA,IAAA,iBAAoBY,GAAW,CACpDV,OAAQ,CACND,QAASF,KAJc,uBAEnBK,EAFmB,EAEnBA,KAMNb,EAMEa,EANFb,MACasB,EAKXT,EALFU,YACcC,EAIZX,EAJFY,aACAC,EAGEb,EAHFa,OACAC,EAEEd,EAFFc,SACcC,EACZf,EADFgB,aAbyB,kBAepB,CAAE7B,MAAAA,EAAOsB,WAAAA,EAAYE,YAAAA,EAAaE,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,IAfhC,uCAiB3BzB,QAAQY,MAAM,mCAjBa,kBAkBpB,IAlBoB,yDAAH,sDAsBrB,SAASe,EAAUR,GACxB,OAAIA,EAAkB,GAAN,OA1DG,kCA0DH,YAA0BA,GACnC,uDACR,CAEM,SAASS,EAAQC,GACtB,GAAIA,EAEF,OADaA,EAAKC,MAAM,KAAK,EAGhC,CAEM,IAAMC,EAAO,mCAAG,WAAMb,GAAN,kGAEIZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DV,OAAQ,CACND,QAASF,KAJM,uBAEXK,EAFW,EAEXA,KAFW,kBAQZA,EAAKsB,MARO,uCAUnBhC,QAAQY,MAAM,mCAVK,kBAWZ,IAXY,yDAAH,sDAePqB,EAAc,mCAAG,WAAMf,GAAN,kGAEHZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DV,OAAQ,CACND,QAASF,KAJa,uBAElBK,EAFkB,EAElBA,KAFkB,kBAQnBA,EAAKC,SARc,uCAU1BX,QAAQY,MAAM,mCAVY,kBAWnB,IAXmB,yDAAH,qD","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n  padding: 20px;\n`;\nexport const ListWrap = styled.ul`\n  padding-left: 20px;\n  padding-bottom: 20px;\n`;\nexport const ListItem = styled.li`\n  padding: 5px 0;\n  :hover {\n    color: green;\n  }\n`;\n","import { getTrendingMovies } from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HomeTitle, ListWrap, ListItem } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const trendingMovies = await getTrendingMovies();\n        if (trendingMovies.length > 0) {\n          setTrendingMovies(\n            trendingMovies.map(trendingMovie => ({\n              id: trendingMovie.id,\n              title: trendingMovie.original_title,\n              name: trendingMovie.name,\n            }))\n          );\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <HomeTitle>Trending Movies</HomeTitle>\n      <ListWrap>\n        {trendingMovies?.map(trendingMovie => (\n          <ListItem key={trendingMovie.id}>\n            <Link to={`/movies/${trendingMovie.id}`}>\n              {trendingMovie.title || trendingMovie.name}\n            </Link>\n          </ListItem>\n        ))}\n      </ListWrap>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'fa9433e46ed4abfaeb75bcf31f473feb';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport function getPoster(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://via.placeholder.com/250x375/c4a9c4/969696.jpg';\n}\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.cast;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n"],"names":["HomeTitle","styled","ListWrap","ListItem","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","length","map","trendingMovie","id","title","original_title","name","console","log","message","getMovies","to","API_KEY","axios","api_key","params","response","data","results","error","getMovieByName","query","page","include_adult","getMovieDetails","movieId","posterPath","poster_path","releaseDate","release_date","genres","overview","voteAverage","vote_average","getPoster","getDate","date","split","getCast","cast","getMovieReview"],"sourceRoot":""}