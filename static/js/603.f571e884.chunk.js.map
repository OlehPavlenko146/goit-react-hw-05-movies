{"version":3,"file":"static/js/603.f571e884.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchWrap = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  width: 100px;\n  color: #fff;\n  padding: 5px 10px;\n  background-color: #38d2d2;\n  background-image: radial-gradient(\n      93% 87% at 87% 89%,\n      rgba(0, 0, 0, 0.23) 0%,\n      transparent 86.18%\n    ),\n    radial-gradient(\n      66% 66% at 26% 20%,\n      rgba(255, 255, 255, 0.55) 0%,\n      rgba(255, 255, 255, 0) 69.79%,\n      rgba(255, 255, 255, 0) 100%\n    );\n  box-shadow: inset -3px -3px 9px rgba(255, 255, 255, 0.25),\n    inset 0px 3px 9px rgba(255, 255, 255, 0.3),\n    inset 0px 1px 1px rgba(255, 255, 255, 0.6),\n    inset 0px -8px 36px rgba(0, 0, 0, 0.3),\n    inset 0px 1px 5px rgba(255, 255, 255, 0.6), 2px 19px 31px rgba(0, 0, 0, 0.2);\n\n  font-weight: bold;\n  font-size: 16px;\n\n  border: 0;\n\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  cursor: pointer;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  SearchWrap,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Searchbar.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('Please enter your request');\n    }\n    onSubmit(query);\n  };\n\n  return (\n    <SearchWrap>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormBtn type=\"submit\">\n          <span>Search</span>\n        </SearchFormBtn>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          name=\"query\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </SearchForm>\n    </SearchWrap>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesListWrap = styled.ul`\n  padding: 20px;\n`;\n\nexport const MoviesListItem = styled.li`\n  padding: 5px;\n  :hover {\n    color: green;\n  }\n`;\n","import { getMovieByName } from 'services/api';\nimport { SearchBar } from 'components/Searchbar/Searchbar';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { MoviesListWrap, MoviesListItem } from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  const changeQuery = query => {\n    const searchMovie = query !== '' ? { query } : {};\n    setSearchParams(searchMovie);\n  };\n\n  useEffect(() => {\n    if (movie === '') {\n      return;\n    }\n    async function searchMovie() {\n      try {\n        setIsLoading(true);\n        const movies = await getMovieByName(movie);\n        if (movies.length > 0) {\n          setMovies(\n            movies.map(movie => ({\n              id: movie.id,\n              title: movie.original_title,\n              name: movie.title,\n              overview: movie.overview,\n              release: movie.release_date,\n            }))\n          );\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.log(error.message);\n        setIsLoading(false);\n      }\n    }\n\n    searchMovie();\n  }, [movie]);\n\n  return (\n    <>\n      <div>\n        <SearchBar onSubmit={changeQuery} />\n\n        {movies.length > 0 && (\n          <MoviesListWrap>\n            {movies?.map(movie => (\n              <MoviesListItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </MoviesListItem>\n            ))}\n          </MoviesListWrap>\n        )}\n      </div>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'fa9433e46ed4abfaeb75bcf31f473feb';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport function getPoster(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://via.placeholder.com/250x375/c4a9c4/969696.jpg';\n}\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.cast;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n"],"names":["SearchWrap","styled","SearchForm","SearchFormBtn","SearchFormInput","SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","MoviesListWrap","MoviesListItem","location","useLocation","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movie","get","useEffect","getMovieByName","length","map","id","title","original_title","overview","release","release_date","console","log","message","searchMovie","to","state","from","Loader","API_KEY","axios","api_key","getTrendingMovies","params","response","data","results","error","page","include_adult","getMovieDetails","movieId","posterPath","poster_path","releaseDate","genres","voteAverage","vote_average","getPoster","getDate","date","split","getCast","cast","getMovieReview"],"sourceRoot":""}