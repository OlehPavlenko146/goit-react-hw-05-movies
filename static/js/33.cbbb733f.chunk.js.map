{"version":3,"file":"static/js/33.cbbb733f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsWrap = styled.div`\n  padding: 20px;\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  display: block;\n  padding: 8px 0;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n\n  :hover {\n    color: green;\n  }\n`;\n\nexport const MainMovieInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  width: 1000px;\n`;\n\nexport const TitleMovie = styled.p`\n  padding: 20px 0;\n  font-weight: 500;\n`;\n\nexport const Overview = styled.p`\n  padding: 20px 0;\n`;\n\nexport const CastAndReviewWrap = styled.div`\n  padding: 20px 0;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const CastLink = styled(NavLink)`\n  display: block;\n  padding: 8px 0;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n\n  :hover {\n    color: green;\n  }\n`;\n\nexport const ReviewsLink = styled(NavLink)`\n  display: block;\n  padding: 8px 0;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n\n  :hover {\n    color: green;\n  }\n`;\n","import { getMovieDetails, getPoster, getDate } from '../../services/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  MovieDetailsWrap,\n  GoBackLink,\n  MainMovieInfo,\n  TitleMovie,\n  Overview,\n  CastAndReviewWrap,\n  CastLink,\n  ReviewsLink,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function movieDetails() {\n      try {\n        const movieInfo = await getMovieDetails(movieId);\n        setMovieInfo(movieInfo);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    movieDetails();\n  }, [movieId]);\n\n  const { title, posterPath, releaseDate, genres, overview, voteAverage } =\n    movieInfo;\n\n  return (\n    <MovieDetailsWrap>\n      <GoBackLink to={backLink}>Back</GoBackLink>\n\n      <MainMovieInfo>\n        <img src={getPoster(posterPath)} alt={title} width=\"250\" />\n        <div>\n          <TitleMovie>\n            Title: {title}\n            <span> ({getDate(releaseDate)})</span>\n          </TitleMovie>\n          <Overview>Overview: {overview}</Overview>\n          <p>User Score: {Math.round(voteAverage * 10)}% </p>\n          {genres ? (\n            <p>Genre: {genres.map(genre => genre.name).join(', ')}</p>\n          ) : (\n            <p>Genre is undefined</p>\n          )}\n        </div>\n      </MainMovieInfo>\n      <CastAndReviewWrap>\n        <CastLink to={'cast'} state={{ from: backLink }}>\n          <p>Cast</p>\n        </CastLink>\n        <ReviewsLink to={'reviews'} state={{ from: backLink }}>\n          <p>Reviews</p>\n        </ReviewsLink>\n      </CastAndReviewWrap>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsWrap>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'fa9433e46ed4abfaeb75bcf31f473feb';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport function getPoster(posterPath) {\n  if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n  return 'https://via.placeholder.com/250x375/c4a9c4/969696.jpg';\n}\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.cast;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Sorry, something happened wrong');\n    return [];\n  }\n};\n"],"names":["MovieDetailsWrap","styled","GoBackLink","NavLink","MainMovieInfo","TitleMovie","Overview","CastAndReviewWrap","CastLink","ReviewsLink","useState","movieInfo","setMovieInfo","movieId","useParams","backLink","useLocation","state","from","useEffect","getMovieDetails","console","log","message","movieDetails","title","posterPath","releaseDate","genres","overview","voteAverage","to","src","getPoster","alt","width","getDate","Math","round","map","genre","name","join","Suspense","fallback","Loader","API_KEY","axios","api_key","getTrendingMovies","params","response","data","results","error","getMovieByName","query","page","include_adult","poster_path","release_date","vote_average","date","split","getCast","cast","getMovieReview"],"sourceRoot":""}